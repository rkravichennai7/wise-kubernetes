name: CI/CD for Wisecow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: rkravichennai7/wisecow

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: [self-hosted, windows, minikube]   # match your runner labels exactly
    steps:
      - uses: actions/checkout@v4
  
      # (Optional) Install kubectl if it's not already on the runner
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v4
        with:
          version: latest
  
      - name: Verify kubectl presence
        shell: powershell
        run: |
          kubectl version --client
          $PSVersionTable.PSVersion
  
      # ---- Minikube on Windows PowerShell (no bash operators) ----
      - name: Ensure minikube is running and export kubeconfig
        shell: powershell
        run: |
          # If Minikube isn't running, start it
          $status = minikube status --format '{{.Host}}' 2>$null
          if ($status -ne "Running") {
            Write-Host "Minikube not running. Starting..."
            minikube start
          } else {
            Write-Host "Minikube already running."
          }
  
          # Make kubectl point to the current Minikube API server/port
          minikube -p minikube update-context
  
          # On Windows, kubeconfig is here:
          $kc = Join-Path $env:USERPROFILE ".kube\config"
  
          # Export for later steps in *this job*
          [System.IO.File]::AppendAllText($env:GITHUB_ENV, "KUBECONFIG=$kc`n")
          Write-Host "KUBECONFIG set to $kc"
  
      - name: Show kubeconfig context
        shell: powershell
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          kubectl config get-contexts
          kubectl config current-context
          kubectl config view --minify
  
      - name: Debug cluster (one-time; remove later)
        shell: powershell
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          kubectl cluster-info
          kubectl get nodes -o wide
  
      - name: Deploy manifests
        shell: powershell
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          # If cert-manager CRDs aren't installed yet, ignore issuer failure
          kubectl apply -f k8s/cert-issuer.yaml 2>$null || echo "Issuer apply skipped (CRDs missing?)"
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl rollout status deployment/wisecow --timeout=180s
  
            kubectl rollout status deployment/wisecow --timeout=180s

