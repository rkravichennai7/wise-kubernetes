name: CI/CD for Wisecow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: rkravichennai7/wisecow

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: [self-hosted, windows, minikube]   # <-- use the exact labels you gave your runner
    steps:
      - uses: actions/checkout@v4

      # If kubectl isn't on this runner yet, uncomment ONE of the installers below
      - name: install-kubectl
        uses: cuzfrog/install-kubectl@master
        
      - name: Verify kubectl presence
        shell: powershell
        run: |
          kubectl version --client
          $PSVersionTable.PSVersion

      - name: Write kubeconfig from secret
        shell: powershell
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
        run: |
          $bytes = [Convert]::FromBase64String($env:KUBECONFIG_B64)
          $out = Join-Path $env:RUNNER_TEMP "kubeconfig"
          [IO.File]::WriteAllBytes($out, $bytes)
          Write-Host "Kubeconfig written to $out"
          # Make KUBECONFIG available to later steps in this job
          echo "KUBECONFIG=$out" >> $env:GITHUB_ENV

      - name: Debug cluster (one-time; remove later)
        shell: powershell
        run: |
          kubectl cluster-info
          kubectl get nodes -o wide

      - name: Deploy manifests
        shell: powershell
        run: |
          # If cert-manager CRDs aren't installed yet, ignore issuer apply failure
          kubectl apply -f k8s/cert-issuer.yaml 2>$null || echo "Issuer apply skipped (CRDs missing?)"
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl rollout status deployment/wisecow --timeout=180s

